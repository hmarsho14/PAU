rename(id = pid,
employ1 = qgb1,
employ = employ,
region = subpopulation,
age = age,
gender = qa002,
education = w01,
hukou = qa301,
mstatus = qea0,
nchild = child16n,
IQ     =qz207)
#Create Variable "Policy"
data_2020_subset$policy <- 1
#Re-categorize
data_2020_subset$gender[data_2020_subset$gender == 5] = 0
data_2020_subset <- subset(data_2020_subset,education != -8)
data_2020_subset$education[data_2020_subset$education < 7] = 0
data_2020_subset$education[data_2020_subset$education == 10] = 0
data_2020_subset$education[data_2020_subset$education == 7] = 1
data_2020_subset$education[data_2020_subset$education == 8] = 2
data_2020_subset$education[data_2020_subset$education == 9] = 3
data_2020_subset <- subset(data_2020_subset,hukou == 1 | hukou == 3)
data_2020_subset$hukou[data_2020_subset$hukou==1] = 0
data_2020_subset$hukou[data_2020_subset$hukou==1] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==1] = 0
data_2020_subset$mstatus[data_2020_subset$mstatus==2] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==3] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==4] = 0
data_2020_subset$mstatus[data_2020_subset$mstatus==5] = 0
#Keeping the same order
data_2016_subset <- select(data_2016_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2018_subset <- select(data_2018_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2020_subset <- select(data_2020_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2016_subset$year <- 2016
data_2018_subset$year <- 2018
data_2020_subset$year <- 2020
#Append
data_all <- bind_rows(data_2016_subset,data_2018_subset,data_2020_subset)
data_all$interaction <- data_all$gender * data_all$policy
data_all$agesq <- data_all$age^2
data_all <- subset(data_all,employ1==0|employ1==1)
data_all <- subset(data_all,employ==0|employ==1)
data_allrange <- subset(data_all,25<=age&age<=64)
data_young <- subset(data_all,16<=age&age<=25)
data_all$interaction <- data_all$gender * data_all$policy
employ_id <- data_all %>% group_by(id) %>% summarize(employ1=mean(employ1))
table(employ_id $ employ1 )
setwd("~/Documents/GitHub/613/Data")
setwd("~/Documents/GitHub/613/Data")
getwd()
setwd("~/Documents/GitHub/613/Data")
setwd("~/Documents/GitHub/613/Data")
library(haven)
library(dplyr)
data_2016 <- read_dta("cfps2016adult_201906.dta")
data_2018 <- read_dta("cfps2018person_202012.dta")
data_2020 <- read_dta("cfps2020person_202112.dta")
#Cleaning 2016 data
data_2016_subset <- select(data_2016,pid,qgb1,employ,subpopulation,cfps_age,cfps_gender,kw1,qea0,cfps_childn,pa301,qz207)
#Create Variable "Policy"
data_2016_subset$policy <- 0
data_2016_subset$policy <- 0
#Rename Variables
data_2016_subset <- data_2016_subset %>% rename(id = pid)
data_2016_subset <- data_2016_subset %>% rename(employ1 = qgb1)
data_2016_subset <- data_2016_subset %>% rename(region = subpopulation)
data_2016_subset <- data_2016_subset %>% rename(gender = cfps_gender)
data_2016_subset <- data_2016_subset %>% rename(age = cfps_age)
data_2016_subset <- data_2016_subset %>% rename(nchild = cfps_childn)
data_2016_subset <- data_2016_subset %>% rename(education = kw1)
data_2016_subset <- data_2016_subset %>% rename(hukou = pa301)
data_2016_subset <- data_2016_subset %>% rename(mstatus = qea0)
data_2016_subset <- data_2016_subset %>% rename(IQ = qz207)
#Recategorize
data_2016_subset$gender[data_2016_subset$gender == 5] = 0
data_2016_subset <- subset(data_2016_subset,education != -8)
data_2016_subset$education[data_2016_subset$education < 7] = 0
data_2016_subset$education[data_2016_subset$education == 10] = 0
data_2016_subset$education[data_2016_subset$education == 7] = 1
data_2016_subset$education[data_2016_subset$education == 8] = 2
data_2016_subset$education[data_2016_subset$education == 9] = 3
data_2016_subset <- subset(data_2016_subset, hukou == 1 | hukou == 3)
data_2016_subset$hukou[data_2016_subset$hukou == 1] = 0
data_2016_subset$hukou[data_2016_subset$hukou == 1] = 1
data_2016_subset$mstatus[data_2016_subset$mstatus == 1] = 0
data_2016_subset$mstatus[data_2016_subset$mstatus == 4] = 0
data_2016_subset$mstatus[data_2016_subset$mstatus == 5] = 0
data_2016_subset$mstatus[data_2016_subset$mstatus == 2] = 1
data_2016_subset$mstatus[data_2016_subset$mstatus == 3] = 1
#Cleaning 2018 data
data_2018_subset <- select(data_2018,pid,qgb1,employ,subpopulation,age,qa002,w01,qa301,qea0,kz207,xchildpid_a_1,xchildpid_a_2,xchildpid_a_3, xchildpid_a_4, xchildpid_a_5, xchildpid_a_6, xchildpid_a_7, xchildpid_a_8, xchildpid_a_9, xchildpid_a_10)
data_2018_children <- data_2018_subset[,c(1,11:20)]
data_2018_children[is.na(data_2018_children)] = -1*8
data_2018_children$nchild <- 0
for (i in 1:37354) {
data_2018_children$nchild[i]<-length(which(data_2018_children[i,]!=-8))-2
}
a<-data_2018_children$nchild
data_2018_subset$nchild <- data_2018_children$nchild
data_2018_subset <- data_2018_subset[,-c(11:20)]
#Create Variable "Policy"
data_2018_subset$policy <- 0
#Cleaning 2020 data
data_2020_subset <- select(data_2020,pid,qgb1,employ,subpopulation,age,qa002,w01,qa301,qea0,child16n,qz207)
#Rename Variables
data_2020_subset <- data_2020_subset %>%
rename(id = pid,
employ1 = qgb1,
employ = employ,
region = subpopulation,
age = age,
gender = qa002,
education = w01,
hukou = qa301,
mstatus = qea0,
nchild = child16n,
IQ     =qz207)
#Create Variable "Policy"
data_2020_subset$policy <- 1
#Re-categorize
data_2020_subset$gender[data_2020_subset$gender == 5] = 0
data_2020_subset <- subset(data_2020_subset,education != -8)
data_2020_subset$education[data_2020_subset$education < 7] = 0
data_2020_subset$education[data_2020_subset$education == 10] = 0
data_2020_subset$education[data_2020_subset$education == 7] = 1
data_2020_subset$education[data_2020_subset$education == 8] = 2
data_2020_subset$education[data_2020_subset$education == 9] = 3
data_2020_subset <- subset(data_2020_subset,hukou == 1 | hukou == 3)
data_2020_subset$hukou[data_2020_subset$hukou==1] = 0
data_2020_subset$hukou[data_2020_subset$hukou==1] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==1] = 0
data_2020_subset$mstatus[data_2020_subset$mstatus==2] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==3] = 1
data_2020_subset$mstatus[data_2020_subset$mstatus==4] = 0
data_2020_subset$mstatus[data_2020_subset$mstatus==5] = 0
#Keeping the same order
data_2016_subset <- select(data_2016_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2018_subset <- select(data_2018_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2020_subset <- select(data_2020_subset,id,policy,employ1,employ,region,hukou,age,gender,education,mstatus,nchild,IQ)
data_2016_subset$year <- 2016
data_2018_subset$year <- 2018
data_2020_subset$year <- 2020
#Append
data_all <- bind_rows(data_2016_subset,data_2018_subset,data_2020_subset)
data_all$interaction <- data_all$gender * data_all$policy
data_all$agesq <- data_all$age^2
data_all <- subset(data_all,employ1==0|employ1==1)
data_all <- subset(data_all,employ==0|employ==1)
data_allrange <- subset(data_all,25<=age&age<=64)
data_young <- subset(data_all,16<=age&age<=25)
data_all$interaction <- data_all$gender * data_all$policy
employ_id <- data_all %>% group_by(id) %>% summarize(employ1=mean(employ1))
table(employ_id $ employ1 )
reg_basic <- lm(employ1 ~ gender + policy + interaction + age + region + education + mstatus + nchild + year, data = data_young )
summary(reg_basic)
library(lmtest)
library(sandwich)
library("lmtest")
library("sandwich")
install.packages(lmtest)
install.packages("lmtest")
install.packages("sandwich")
library("lmtest")
library("sandwich")
ct.reg_basic <- coeftest(reg_basic, vcov. = vcovHC)
summary(ct.reg_basic)
ct.reg_basic
library(dplyr)
library(lubridate)
library(stats)
library(ggplot2)
library(ggplot2)
p <- ggplot(refined_race_ethn, aes(x = race, y = count)) +
geom_bar(stat = "identity")
setwd("~/Documents/GitHub/PAU")
#=========================================================================
# Import, refine, and export CSV file
#=========================================================================
investigation_data_raw <- read.csv('car_ped_stops.csv') # import 2019 Vehicle & Pedestrian Investigations CSV file
# from https://opendataphilly.org/datasets/vehicle-pedestrian-investigations/
investigation_data_raw$datetimeoccur <- ymd_hms(investigation_data_raw$datetimeoccur) # reformat datetimeoccur variable
refined <- investigation_data_raw %>% # refine data set
filter(stoptype == 'vehicle') %>% # for vehicle stops
filter(between(datetimeoccur, as.Date("2019-01-01"), as.Date("2019-03-31"))) %>% # from January 1, 2019 to March 31, 2019
filter(districtoccur == 12 | districtoccur == 24) # in districts 12 and 24
write.csv(refined, "~/Documents/GitHub/PAU/refined_data.csv", row.names = FALSE) # export refined dataset
#=========================================================================
# Question 1
#=========================================================================
# What is the aggregate number of vehicle stops conducted by the PPD?
num_stops <- nrow(refined) # 13654
#=========================================================================
# Question 2
#=========================================================================
# What is the breakdown of aggregate vehicle stops by race/ethnicity by percentage and count?
refined_race_ethn <- refined %>% group_by(race) %>% summarise(count = n()) %>% mutate(percentage = round(count / num_stops * 100, 2)) # create table
write.csv(refined_race_ethn, "~/Documents/GitHub/PAU/refined_race_eth.csv", row.names = FALSE) # export table
#=========================================================================
# Question 3
#=========================================================================
# From the aggregate data, in which month did the PPD conduct the most vehicle stops?
refined_month <- refined %>% group_by(month = floor_date(datetimeoccur, "month")) %>% summarise(count = n()) %>% replace(1, c('January', 'February', 'March')) # create table
write.csv(refined_month, "~/Documents/GitHub/PAU/refined_month.csv", row.names = FALSE) # export table
#=========================================================================
# Question 4
#=========================================================================
# From the aggregate data, on which day of the week were vehicles most likely to be stopped?
refined_weekday <- refined %>% group_by(weekday) %>% summarise(count = n()) # create table
write.csv(refined_weekday, "~/Documents/GitHub/PAU/refined_weekday.csv", row.names = FALSE) # export table
#=========================================================================
# Question 5
#=========================================================================
# Were more motorists stopped in District 12 or District 24?
refined_district <- refined %>% group_by(districtoccur) %>% summarise(count = n()) # create table
write.csv(refined_district, "~/Documents/GitHub/PAU/refined_district.csv", row.names = FALSE) # export table
#=========================================================================
# Question 6
#=========================================================================
# What is the breakdown of vehicle stops by race/ethnicity in District 12 compared to District 24?
refined_race_district <- table(refined$race, refined$districtoccur) # create two-way table
write.csv(refined_race_district, "~/Documents/GitHub/PAU/refined_race_district.csv", row.names = TRUE) # export table
#=========================================================================
# Question 7
#=========================================================================
# Calculate the frisk rate in District 12 for each racial/ethnic identity.
refined_frisked_12 <- refined %>% filter(districtoccur == 12) %>% group_by(race) %>% summarise(frisk_rate = round(sum(vehicle_frisked) / n() * 100, 2)) # create table
write.csv(refined_frisked_12, "~/Documents/GitHub/PAU/refined_frisked_12.csv", row.names = TRUE) # export table
#=========================================================================
# Question 8
#=========================================================================
# Are there any observable differences in vehicle stops in District 12 versus District 24?
# What might account for such differences, and how would you go about testing your hypotheses?
refined_frisked_24 <- refined %>% filter(districtoccur == 24) %>% group_by(race) %>% summarise(frisk_rate = round(sum(vehicle_frisked) / n() * 100, 2)) # create table
write.csv(refined_frisked_24, "~/Documents/GitHub/PAU/refined_frisked_24.csv", row.names = TRUE) # export table
refined_frisked_district <- merge(refined_frisked_12, refined_frisked_24, by = 'race') %>% setNames(c('race', '12', '24')) # compare racial frisk rates across Districts 12 & 24
refined <- refined %>% mutate(month = floor_date(datetimeoccur, "month"))
district_month <- table(refined$districtoccur, refined$month)
write.csv(district_month, "~/Documents/GitHub/PAU/district_month.csv", row.names = TRUE) # export table
print(chisq.test(district_month)) # p-value = 0.0003325
district_weekday <- table(refined$districtoccur, refined$weekday)
write.csv(district_weekday, "~/Documents/GitHub/PAU/district_weekday.csv", row.names = TRUE) # export table
print(chisq.test(district_weekday)) # p-value < 2.2e-16
district_gender <- table(refined$districtoccur, refined$gender)
write.csv(district_gender, "~/Documents/GitHub/PAU/district_gender.csv", row.names = TRUE) # export table
print(chisq.test(district_gender)) # p-value = 0.1665
district_race <- table(refined$districtoccur, refined$race)
write.csv(district_race, "~/Documents/GitHub/PAU/district_race.csv", row.names = TRUE) # export table
print(chisq.test(district_race)) # p-value < 2.2e-16
district_searched <- table(refined$districtoccur,refined$vehicle_searched)
write.csv(district_searched, "~/Documents/GitHub/PAU/district_searched.csv", row.names = TRUE) # export table
print(chisq.test(district_searched)) # p-value < 2.2e-16
district_frisked <- table(refined$districtoccur,refined$vehicle_frisked)
write.csv(district_frisked, "~/Documents/GitHub/PAU/district_frisked.csv", row.names = TRUE) # export table
print(chisq.test(district_frisked)) # p-value = 4.614e-07
district_contraband <- table(refined$districtoccur,refined$vehicle_contraband)
write.csv(district_contraband, "~/Documents/GitHub/PAU/district_contraband.csv", row.names = TRUE) # export table
print(chisq.test(district_contraband)) # p-value = 6.218e-12
#=========================================================================
# Question 9
#=========================================================================
# After you have completed answering these questions, please produce graph(s) that
# you find interesting. These could be vehicle stops over time, a breakdown of
# vehicle stops by race/ethnici
p <- ggplot(refined_race_ethn, aes(x = race, y = count)) +
geom_bar(stat = "identity")
print(p)
p <- ggplot(refined_race_ethn, aes(x = race, y = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
print(p)
p <- ggplot(refined_race_ethn, aes(x = race, y = count)) +
geom_bar(stat = "identity", color="blue", fill=rgb(0.1,0.4,0.5,0.7) ) +
scale_x_discrete(guide = guide_axis(n.dodge=2))
print(p)
p <- ggplot(refined_race_ethn, aes(x = race, y = count)) +
geom_bar(stat = "identity", fill=rgb(0.1,0.4,0.5,0.7) ) +
scale_x_discrete(guide = guide_axis(n.dodge=2))
print(p)
p <- ggplot(refined_race_ethn, aes(x = race, y = count)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = len), vjust = -0.3, size = 3.5) +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
theme_minimal()
p
p <- ggplot(refined_race_ethn, aes(x = race, y = count)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
theme_minimal()
p
breakdown_race <- ggplot(refined_race_ethn, aes(x = race, y = count)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
theme_minimal()
png('breakdown_race.png')
png("~/Documents/GitHub/PAU/breakdown_race.png")
breakdown_race <- ggplot(refined_race_ethn, aes(x = race, y = count)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
theme_minimal()
png("breakdown_race.png")
print(breakdown_race)
dev.off()
breakdown_ts <- ggplot(refined, aes(x = datetimeoccur, y = value)) +
geom_line() +
xlab("")
breakdown_ts
breakdown_ts <- ggplot(refined, aes(x = datetimeoccur, y = n())) +
geom_point()
breakdown_ts
View(refined_month)
breakdown_ts <- ggplot(refined_month, aes(x = month, y = count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal()
breakdown_ts
breakdown_ts <- ggplot(refined_month, aes(x = month, y = count)) +
geom_bar(stat = "identity", fill = "steelblue") +
+ ylim(0, 6000)
breakdown_ts <- ggplot(refined_month, aes(x = month, y = count)) +
geom_bar(stat = "identity", fill = "steelblue") +
ylim(0, 6000) +
theme_minimal()
breakdown_ts
View(refined_weekday)
breakdown_weekday <- ggplot(refined_weekday, aes(x = weekday, y = count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal()
png("breakdown_weekday.png")
print(breakdown_weekday)
dev.off()
breakdown_race <- pie(refined_race_ethn, labels = c("Gr-A","Gr-B","Gr-C","Gr-D","Gr-E"), main  = "Vehicle Stops by Race/Ethnicity")
breakdown_race <- pie(refined_race_ethn$count, labels = c("Gr-A","Gr-B","Gr-C","Gr-D","Gr-E"), main  = "Vehicle Stops by Race/Ethnicity")
View(refined_race_ethn)
write.csv(district_contraband, "~/Documents/GitHub/PAU/district_contraband.csv", row.names = TRUE) # export table
breakdown_race <- pie(refined_race_ethn$count, labels = c("American Indian", "Asian", "Black - Latino", "Black - Non-Latino", "Unknown", "White - Latino", "White - Non-Latino"), main  = "Vehicle Stops by Race/Ethnicity", radius = 2)
png("breakdown_race.png")
print(breakdown_race)
dev.off()
breakdown_race <- pie(refined_race_ethn$count, labels = c("American Indian", "Asian", "Black - Latino", "Black - Non-Latino", "Unknown", "White - Latino", "White - Non-Latino"), main  = "Vehicle Stops by Race/Ethnicity", radius = 2)
png("breakdown_race.png")
print(breakdown_race)
dev.off()
breakdown_weekday <- ggplot(refined_weekday, aes(x = weekday, y = count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal()
png("breakdown_weekday.png")
print(breakdown_weekday)
dev.off()
print(breakdown_race)
breakdown_race <- pie(refined_race_ethn$count, labels = c("American Indian", "Asian", "Black - Latino", "Black - Non-Latino", "Unknown", "White - Latino", "White - Non-Latino"), main  = "Vehicle Stops by Race/Ethnicity", radius = 2)
png("breakdown_race.png")
print(breakdown_race)
dev.off()
png("breakdown_race.png")
breakdown_race <- pie(refined_race_ethn$count, labels = c("American Indian", "Asian", "Black - Latino", "Black - Non-Latino", "Unknown", "White - Latino", "White - Non-Latino"), main  = "Vehicle Stops by Race/Ethnicity", radius = 2)
dev.off()
png("breakdown_race.png")
breakdown_race <- pie(refined_race_ethn$count, labels = c("American Indian", "Asian", "Black - Latino", "Black - Non-Latino", "Unknown", "White - Latino", "White - Non-Latino"), main  = "Vehicle Stops by Race/Ethnicity")
dev.off()
png("breakdown_race.png", width = 15, height = 10, units = "in")
png("breakdown_race.png", width = 15, height = 10, units = "in", res = 100)
breakdown_race <- pie(refined_race_ethn$count, labels = c("American Indian", "Asian", "Black - Latino", "Black - Non-Latino", "Unknown", "White - Latino", "White - Non-Latino"), main  = "Vehicle Stops by Race/Ethnicity")
dev.off()
refined_gender <- refined %>% group_by(gender) %>% summarise(count = n()) # create table
View(refined_gender)
View(refined)
refined_gender <- refined %>% filter(gender == "Male" | gender == "Female") %>% group_by(gender) %>% summarise(count = n()) # create table
View(refined_gender)
png("breakdown_gender.png", width = 15, height = 10, units = "in", res = 100)
breakdown_gender <- pie(refined_gender$count, labels = c("Male", "Female"), main  = "Vehicle Stops by Gender")
dev.off()
View(refined)
refined_age <- refined %>% mutate(age_group = case_when(age <= 18 ~ 'Minor (<=18)',
age < 30 ~ '19-29',
age < 40 ~ '30s',
age < 50 ~ '40s',
age < 60 ~ '50s and Early 60s',
age < 120 ~ 'Senior (>=65)'))
View(refined_age)
refined_age_chart <- refined_age %>% group_by(age_group) %>% summarise(count = n())
View(refined_age_chart)
refined_age <- refined %>% filter(age != 'NA') %>% mutate(age_group = case_when(age <= 18 ~ 'Minor (<=18)',
age < 30 ~ '19-29',
age < 40 ~ '30s',
age < 50 ~ '40s',
age < 60 ~ '50s and Early 60s',
age < 120 ~ 'Senior (>=65)'))
refined_age_chart <- refined_age %>% group_by(age_group) %>% summarise(count = n())
View(refined_age_chart)
View(refined_gender)
refined_age <- refined %>% filter(age != 'NA') %>% mutate(age_group = case_when(age <= 18 ~ 'Minor (<=18)',
age < 30 ~ '19-29',
age < 40 ~ '30s',
age < 50 ~ '40s',
age < 60 ~ '50s and Early 60s',
age < 120 ~ 'Senior (>=65)'))
refined_age_chart <- refined_age %>% group_by(age_group) %>% summarise(count = n()) # create table
png("breakdown_age.png", width = 15, height = 10, units = "in", res = 100)
breakdown_age <- pie(refined_age_chart$count, labels = c('19-29', '30s', '40s', '50s and Early 60s', 'Minor (<=18)', 'Senior (>=65)'), main  = "Vehicle Stops by Age Group")
dev.off()
refined_gender <- refined %>% filter(gender == "Male" | gender == "Female") %>% group_by(gender) %>% summarise(count = n()) # create table
png("breakdown_gender.png", width = 15, height = 10, units = "in", res = 100)
breakdown_gender <- pie(refined_gender$count, labels = c("Female", "Male"), main  = "Vehicle Stops by Gender")
dev.off()
View(refined)
refined_ts <- refined %>% group_by(datetimeoccur) %>% summarise(count = n())
breakdown_ts <- ggplot(refined_ts, aes(x = datetimeoccur, y = count)) +
geom_line(stat = "identity", fill = "steelblue") +
theme_minimal()
png("breakdown_ts.png")
print(breakdown_ts)
dev.off()
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10))
View(refined_ts)
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(datetimeoccur) %>% summarise(count = n())
View(refined_ts)
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
View(refined_ts)
breakdown_ts <- ggplot(refined_ts, aes(x = date, y = count)) +
geom_line() +
theme_minimal()
png("breakdown_ts.png")
print(breakdown_ts)
dev.off()
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
breakdown_ts <- ggplot(refined_ts, aes(x = date, y = count)) +
geom_line() +
ylim(0, 100)
theme_minimal()
png("breakdown_ts.png")
print(breakdown_ts)
dev.off()
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
View(refined_ts)
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
breakdown_ts <- ggplot(refined_ts, aes(x = date, y = count)) +
geom_line() +
ylim(0, 350) +
theme_minimal()
png("breakdown_ts.png")
print(breakdown_ts)
dev.off()
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
breakdown_ts <- ggplot(refined_ts, aes(x = date, y = count)) +
geom_point() +
ylim(0, 350) +
theme_minimal()
png("breakdown_ts.png")
print(breakdown_ts)
dev.off()
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
breakdown_ts <- ggplot(refined_ts, aes(x = date, y = count)) +
geom_point() +
ylim(0, 300) +
theme_minimal()
png("breakdown_ts.png")
print(breakdown_ts)
dev.off()
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
breakdown_ts <- ggplot(refined_ts, aes(x = date, y = count)) +
geom_line() +
ylim(0, 300) +
theme_minimal() +
scale_x_date(breaks = date_breaks("months"),
labels = date_format("%b"))
library(scales)
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
breakdown_ts <- ggplot(refined_ts, aes(x = date, y = count)) +
geom_line() +
ylim(0, 300) +
theme_minimal() +
scale_x_date(breaks = date_breaks("months"),
labels = date_format("%b"))
png("breakdown_ts.png")
print(breakdown_ts)
refined_ts <- refined_ts %>% as.Date(date)
refined_ts <- refined_ts %>% as.Date(refined_ts$date)
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
refined_ts <- refined_ts %>% as.Date(refined_ts$date)
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
breakdown_ts <- ggplot(refined_ts, aes(x = date, y = count)) +
geom_line() +
ylim(0, 300) +
theme_minimal() +
theme(axis.ticks.x=element_blank())
png("breakdown_ts.png")
print(breakdown_ts)
dev.off()
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
breakdown_ts <- ggplot(refined_ts, aes(x = date, y = count)) +
geom_line() +
ylim(0, 300) +
theme_minimal()
png("breakdown_ts.png")
print(breakdown_ts)
dev.off()
View(refined_ts)
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
breakdown_ts <- ggplot(refined_ts, aes(x = date, y = count)) +
geom_line() +
ylim(0, 300) +
theme_minimal()
png("breakdown_ts.png")
print(breakdown_ts)
dev.off()
refined_ts <- refined %>% mutate(date = substr(datetimeoccur, 1, 10)) %>% group_by(date) %>% summarise(count = n())
breakdown_ts <- ggplot(refined_ts, aes(x = date, y = count)) +
geom_line() +
ylim(0, 300) +
theme_minimal()
png("breakdown_ts.png")
print(breakdown_ts)
dev.off()
